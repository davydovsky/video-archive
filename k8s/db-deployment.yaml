apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.prod.yml
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.prod.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/proxynet: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: DJANGO_DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_DATABASE_PORT
                  name: config--env
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: DJANGO_SECRET_KEY
                  name: secret--env
            - name: DJANGO_SUPERUSER_EMAIL
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_SUPERUSER_EMAIL
                  name: config--env
            - name: DJANGO_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DJANGO_SUPERUSER_PASSWORD
                  name: secret--env
            - name: DJANGO_SUPERUSER_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_SUPERUSER_USERNAME
                  name: config--env
            - name: DOMAIN_NAME
              valueFrom:
                configMapKeyRef:
                  key: DOMAIN_NAME
                  name: config--env
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_DATABASE
                  name: config--env
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MYSQL_PASSWORD
                  name: secret--env
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MYSQL_ROOT_PASSWORD
                  name: secret--env
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_USER
                  name: config--env
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: RABBITMQ_LOGIN
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_LOGIN
                  name: config--env
            - name: RABBITMQ_MANAGEMENT_PORT
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_MANAGEMENT_PORT
                  name: config--env
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: RABBITMQ_PASSWORD
                  name: secret--env
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PORT
                  name: config--env
          image: davydovsky/video-archive:db-latest
          name: db
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mdbdata
      restartPolicy: Always
      volumes:
        - name: mdbdata
          persistentVolumeClaim:
            claimName: mdbdata
status: {}
